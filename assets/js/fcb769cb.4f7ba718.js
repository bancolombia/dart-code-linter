"use strict";(self.webpackChunkdart_code_linter=self.webpackChunkdart_code_linter||[]).push([[2588],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},396:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const i={},a="Excluding Code from Analysis",l={unversionedId:"configuration/excluding-code",id:"configuration/excluding-code",title:"Excluding Code from Analysis",description:"DCL also excludes files listed in the analyzer exclude: option. For example,",source:"@site/docs/configuration/excluding-code.md",sourceDirName:"configuration",slug:"/configuration/excluding-code",permalink:"/docs/configuration/excluding-code",draft:!1,editUrl:"https://github.com/bancolombia/dart-code-linter/tree/gh-pages-source/docs/configuration/excluding-code.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring Rules",permalink:"/docs/configuration/configuring-rules"},next:{title:"Presets",permalink:"/docs/configuration/presets"}},c={},u=[{value:"Using Comments",id:"using-comments",level:2},{value:"Using Configuration",id:"using-configuration",level:2}],s={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"excluding-code-from-analysis"},"Excluding Code from Analysis"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"DCL also excludes files listed in the analyzer exclude: option. For example,"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-analysis_options.yaml"},"\nanalyzer:\n  exclude:\n    - 'example/**'\n    - 'build/**'\n    - '**/*.g.dart'\n    - '**/*.freezed.dart'\n")),(0,o.kt)("p",{parentName:"admonition"},"will also disable DCL analysis for the listed files.")),(0,o.kt)("h2",{id:"using-comments"},"Using Comments"),(0,o.kt)("p",null,"To ignore a specific rule or anti-pattern warning, add // ignore comment:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// ignore: no-empty-block\nvoid emptyFunction() {}\n")),(0,o.kt)("p",null,"End-of-line comments are supported as well. The following communicates the same:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void emptyFunction() {} // ignore: no-empty-block\n")),(0,o.kt)("p",null,"To ignore a rule for an entire file, use the ignore_for_file comment. For example,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// ignore_for_file: no-empty-block\n...\nvoid emptyFunction() {}\n")),(0,o.kt)("p",null,"It's the same approach that the dart linter package use."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Analyzer // ignore_for_file: type=lint is currently not supported.")),(0,o.kt)("p",null,"Commands also support ignore via comments. For example, ignore_for_file: unused-code comment will suppress unused code check for an entire file."),(0,o.kt)("h2",{id:"using-configuration"},"Using Configuration"),(0,o.kt)("p",null,"If you want a specific rule to ignore files, you can configure exclude entry for it. For example,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-analysis_options.yaml"},"\ndart_code_linter:\n  rules:\n    - no-equal-arguments:\n        exclude:\n          - test/**\n")),(0,o.kt)("p",null,"and similar example for anti-pattern,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-analysis_options.yaml"},"\ndart_code_linter:\n  anti-patterns:\n    - long-method:\n        exclude:\n          - test/**\n")))}d.isMDXComponent=!0}}]);