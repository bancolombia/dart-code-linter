"use strict";(self.webpackChunkdart_code_linter=self.webpackChunkdart_code_linter||[]).push([[8154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2768:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(7462),a=(n(7294),n(3905));const r={},i="Check Unused Code",l={unversionedId:"cli/check-unused-code",id:"cli/check-unused-code",title:"Check Unused Code",description:"Checks unused classes, fields, properties, methods, functions, variables, extensions, enums, mixins and type aliases.",source:"@site/docs/cli/check-unused-code.md",sourceDirName:"cli",slug:"/cli/check-unused-code",permalink:"/docs/cli/check-unused-code",draft:!1,editUrl:"https://github.com/bancolombia/dart-code-linter/tree/gh-pages-source/docs/cli/check-unused-code.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Check Unnecessary Nullable Parameters",permalink:"/docs/cli/check-unnecessary-nullable"},next:{title:"Check Unused Files",permalink:"/docs/cli/check-unused-files"}},s={},u=[{value:"Suppressing the command",id:"suppressing-the-command",level:2},{value:"Monorepo support",id:"monorepo-support",level:2},{value:"Output example",id:"output-example",level:2},{value:"Console",id:"console",level:3},{value:"JSON",id:"json",level:3},{value:"The root object fields are",id:"the-root-object-fields-are",level:4},{value:"The unusedCode object fields are",id:"the-unusedcode-object-fields-are",level:4},{value:"The issue object fields are",id:"the-issue-object-fields-are",level:4},{value:"GitLab",id:"gitlab",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"check-unused-code"},"Check Unused Code"),(0,a.kt)("p",null,"Checks unused classes, fields, properties, methods, functions, variables, extensions, enums, mixins and type aliases."),(0,a.kt)("p",null,"To execute the command, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ dcl check-unused-code lib # or dcl uc lib\n")),(0,a.kt)("p",null,"Full command description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'Usage: dcl check-unused-code [arguments] <directories>\n-h, --help                                       Print this usage information.\n\n\n-r, --reporter=<console>                         The format of the output of the analysis.\n                                                 [console (default), codeclimate, json, gitlab]\n\n\n-c, --print-config                               Print resolved config.\n\n\n    --root-folder=<./>                           Root folder.\n                                                 (defaults to current directory)\n    --sdk-path=<directory-path>                  Dart SDK directory path.\n                                                 If the project has a `.fvm/flutter_sdk` symlink, it will be used if the SDK is not found.\n    --exclude=<{**/*.g.dart,**/*.freezed.dart}>  File paths in Glob syntax to be exclude.\n                                                 (defaults to "{**/*.g.dart,**/*.freezed.dart}")\n\n\n    --no-congratulate                            Don\'t show output even when there are no issues.\n\n\n    --[no-]verbose                               Show verbose logs.\n\n\n    --no-analytics                               Disable sending anonymous usage statistics.\n\n\n    --[no-]monorepo                              Treat all exported code as unused by default.\n\n\n    --[no-]fatal-unused                          Treat find unused code as fatal.\n                                                 (defaults to on)\n')),(0,a.kt)("h2",{id:"suppressing-the-command"},"Suppressing the command"),(0,a.kt)("p",null,"In order to suppress the command add the ",(0,a.kt)("inlineCode",{parentName:"p"},"ignore: unused-code")," comment. To suppress for an entire file add ",(0,a.kt)("inlineCode",{parentName:"p"},"ignore_for_file: unused-code")," to the beginning of a file."),(0,a.kt)("h2",{id:"monorepo-support"},"Monorepo support"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"By default this command treats all code that is exported from the package as used. It uses ",(0,a.kt)("inlineCode",{parentName:"p"},"check-exports-completeness")," results and won't report even transitive public entities that are not exported directly."),(0,a.kt)("p",{parentName:"admonition"},"This command also follows this ",(0,a.kt)("a",{parentName:"p",href:"https://dart.dev/tools/pub/package-layout#implementation-files"},"convention")," of locating implementation files in the ",(0,a.kt)("inlineCode",{parentName:"p"},"lib/src/")," folder. If you don't follow this convention, you will need to pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"--monorepo")," flag for this command to work.")),(0,a.kt)("p",null,"To disable this behavior use ",(0,a.kt)("inlineCode",{parentName:"p"},"--monorepo")," flag. This might be useful when all the packages in your repository are only used within the repository and are not published to the pub."),(0,a.kt)("h2",{id:"output-example"},"Output example"),(0,a.kt)("h3",{id:"console"},"Console"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"--reporter=console")," to enable this format."),(0,a.kt)("h3",{id:"json"},"JSON"),(0,a.kt)("p",null,"The reporter prints a single JSON object containing meta information and the unused code file paths. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"--reporter=json")," to enable this format."),(0,a.kt)("h4",{id:"the-root-object-fields-are"},"The root object fields are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"formatVersion")," - an integer representing the format version (will be incremented each time the serialization format changes)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timestamp")," - a creation time of the report in YYYY-MM-DD HH:MM:SS format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unusedCode")," - an array of unused code issues")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "formatVersion": 2,\n  "timestamp": "2021-04-11 14:44:42",\n  "unusedCode": [\n    {\n      ...\n    },\n    {\n      ...\n    },\n    {\n      ...\n    }\n  ]\n}\n')),(0,a.kt)("h4",{id:"the-unusedcode-object-fields-are"},"The unusedCode object fields are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - a relative path of the unused file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"issues")," - an array of issues detected in the target file")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "path": "lib/src/some/file.dart",\n  "issues": [\n    ...\n  ],\n}\n')),(0,a.kt)("h4",{id:"the-issue-object-fields-are"},"The issue object fields are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"declarationType")," - unused declaration type"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"declarationName")," - unused declaration name"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"offset")," - a zero-based offset of the class member location in the source"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"line")," - a zero-based line of the class member location in the source"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"column")," - a zero-based column of class member the location in the source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "declarationType": "extension",\n  "declarationName": "StringX",\n  "offset": 156,\n  "line": 7,\n  "column": 1\n}\n')),(0,a.kt)("h3",{id:"gitlab"},"GitLab"),(0,a.kt)("p",null,"Reports unused code issues in merge requests based on Code Quality custom tool. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"--reporter=gitlab")," to enable this format."))}p.isMDXComponent=!0}}]);