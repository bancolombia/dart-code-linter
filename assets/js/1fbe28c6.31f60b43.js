"use strict";(self.webpackChunkdart_code_linter=self.webpackChunkdart_code_linter||[]).push([[5958],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=l,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1557:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),l=(n(7294),n(3905));const r={},i="Analyze",o={unversionedId:"cli/analyze",id:"cli/analyze",title:"Analyze",description:"Reports lint rules violations.",source:"@site/docs/cli/analyze.md",sourceDirName:"cli",slug:"/cli/analyze",permalink:"/docs/cli/analyze",draft:!1,editUrl:"https://github.com/bancolombia/dart-code-linter/tree/gh-pages-source/docs/cli/analyze.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/docs/cli/"},next:{title:"Check Unnecessary Nullable Parameters",permalink:"/docs/cli/check-unnecessary-nullable"}},s={},c=[{value:"Output example",id:"output-example",level:2},{value:"Console",id:"console",level:3},{value:"JSON",id:"json",level:3},{value:"The root object fields are",id:"the-root-object-fields-are",level:4},{value:"The record object fields are",id:"the-record-object-fields-are",level:4},{value:"The issue object fields are",id:"the-issue-object-fields-are",level:4},{value:"The code span object fields are",id:"the-code-span-object-fields-are",level:4},{value:"The location object fields are",id:"the-location-object-fields-are",level:4},{value:"GitHub",id:"github",level:3},{value:"Flutter example",id:"flutter-example",level:4},{value:"Dart example",id:"dart-example",level:4},{value:"Full Example",id:"full-example",level:4},{value:"GitLab",id:"gitlab",level:3},{value:"Checkstyle",id:"checkstyle",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"analyze"},"Analyze"),(0,l.kt)("p",null,"Reports lint rules violations."),(0,l.kt)("p",null,"To execute the command, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ dcl analyze lib # or dcl a lib\n")),(0,l.kt)("p",null,"info"),(0,l.kt)("p",null,"You need to configure rules entry in the analysis_options.yaml to have a rules report included into the result."),(0,l.kt)("p",null,"Full command description:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'Usage: dcl analyze [arguments] <directories>\n-h, --help                                       Print this usage information.\n\n\n-r, --reporter=<console>                         The format of the output of the analysis.\n                                                 [console (default), checkstyle, codeclimate, github, gitlab, json]\n    --json-path=<path/to/file.json>              Path to the JSON file with the output of the analysis.\n\n\n-c, --print-config                               Print resolved config.\n\n\n    --root-folder=<./>                           Root folder.\n                                                 (defaults to current directory)\n    --sdk-path=<directory-path>                  Dart SDK directory path.\n                                                 If the project has a `.fvm/flutter_sdk` symlink, it will be used if the SDK is not found. \n    --exclude=<{**/*.g.dart,**/*.freezed.dart}>  File paths in Glob syntax to be exclude.\n                                                 (defaults to "{**/*.g.dart,**/*.freezed.dart}")\n\n\n    --no-congratulate                            Don\'t show output even when there are no issues.\n\n\n    --[no-]verbose                               Show verbose logs.\n\n\n    --ci-key                                     The license key to run on CI server.\n    --email                                      The email used to purchase the license.\n\n\n    --no-analytics                               Disable sending anonymous usage statistics.\n\n\n    --[no-]fatal-style                           Treat style level issues as fatal.\n    --[no-]fatal-performance                     Treat performance level issues as fatal.\n    --[no-]fatal-warnings                        Treat warning level issues as fatal.\n                                                 (defaults to on)\n')),(0,l.kt)("h2",{id:"output-example"},"Output example"),(0,l.kt)("h3",{id:"console"},"Console"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"--reporter=console")," to enable this format."),(0,l.kt)("h3",{id:"json"},"JSON"),(0,l.kt)("p",null,"The reporter prints a single JSON object containing meta information and the violations grouped by a file. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"--reporter=json")," to enable this format."),(0,l.kt)("h4",{id:"the-root-object-fields-are"},"The root object fields are"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"formatVersion")," - an integer representing the format version (will be incremented each time the serialization format changes)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," - a creation time of the report in YYYY-MM-DD HH:MM:SS format"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"records")," - an array of ",(0,l.kt)("a",{parentName:"li",href:"#the-record-object-fields-are"},"objects"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "formatVersion": 2,\n  "timestamp": "2021-04-11 14:44:42",\n  "records": [\n    {\n      ...\n    },\n    {\n      ...\n    },\n    {\n      ...\n    }\n  ]\n}\n')),(0,l.kt)("h4",{id:"the-record-object-fields-are"},"The record object fields are"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"path")," - a relative path to the target file"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"issues")," - an array of ",(0,l.kt)("a",{parentName:"li",href:"#the-issue-object-fields-are"},"issues")," detected in the target file")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "path": "lib/src/metrics/metric_computation_result.dart",\n  "issues": [\n    ...\n  ]\n}\n')),(0,l.kt)("h4",{id:"the-issue-object-fields-are"},"The issue object fields are"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ruleId")," - an id of the rule associated with the issue"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"documentation")," - an url of a page containing documentation associated with the issue"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"codeSpan")," - a source ",(0,l.kt)("a",{parentName:"li",href:"#the-code-span-object-fields-are"},"code span")," associated with the issue"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"severity")," - a severity of the issue"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"message")," - a short message")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "ruleId": "long-parameter-list",\n  "documentation": "https://git.io/JUGrU",\n  "codeSpan": {\n    ...\n  },\n  "severity": "none",\n  "message": "Long Parameter List. This function require 5 arguments.",\n}\n')),(0,l.kt)("h4",{id:"the-code-span-object-fields-are"},"The code span object fields are"),(0,l.kt)("p",null,"start - a start ",(0,l.kt)("a",{parentName:"p",href:"#the-location-object-fields-are"},"location")," of an entity\nend - an end ",(0,l.kt)("a",{parentName:"p",href:"#the-location-object-fields-are"},"location")," of an entity\ntext - a source code text of an entity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "start": {\n    ...\n  },\n  "end": {\n    ...\n  },\n  "text": "entity source code"\n}\n')),(0,l.kt)("h4",{id:"the-location-object-fields-are"},"The location object fields are"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"offset")," - a zero-based offset of the location in the source"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"line")," - a zero-based line of the location in the source"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"column")," - a zero-based column of the location in the source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "offset": 156,\n  "line": 7,\n  "column": 1\n}\n')),(0,l.kt)("h3",{id:"github"},"GitHub"),(0,l.kt)("p",null,"Reports about design and static code diagnostics issues in pull requests based on GitHub Actions Workflow commands. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"--reporter=github")," to enable this format."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install dart/flutter and get packages:")),(0,l.kt)("h4",{id:"flutter-example"},"Flutter example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"jobs:\n  your_job_name:\n    steps:\n      - name: Install Flutter\n        uses: subosito/flutter-action@master\n        with:\n          channel: stable\n\n      - name: Install dependencies\n        run: flutter pub get\n      ...\n")),(0,l.kt)("h4",{id:"dart-example"},"Dart example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"jobs:\n  your_job_name:\n    steps:\n      - name: Install Dart\n        uses: dart-lang/setup-dart@v1\n\n      - name: Install dependencies\n        run: dart pub get\n      ...\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Run DCL:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Run DCL\n  run: dcl analyze --reporter=github lib\n")),(0,l.kt)("h4",{id:"full-example"},"Full Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"jobs:\n  your_job_name:\n    steps:\n      - name: Install Flutter\n        uses: subosito/flutter-action@master\n        with:\n          channel: stable\n\n      - name: Install dependencies\n        run: flutter pub get\n\n      - name: Run DCL\n        run: dcl analyze --reporter=github lib\n")),(0,l.kt)("h3",{id:"gitlab"},"GitLab"),(0,l.kt)("p",null,"Reports lint issues in merge requests based on Code Quality custom tool. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"--reporter=gitlab")," to enable this format."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Define a job in your ",(0,l.kt)("inlineCode",{parentName:"li"},".gitlab-ci.yml")," file that generates the ",(0,l.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/ci/yaml/index.html#artifactsreportscodequality"},"Code Quality report artifact"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"code_quality:\n  image: dart\n  script:\n    - dcl analyze --reporter=gitlab lib > code-quality-report.json\n  artifacts:\n    reports:\n      codequality: code-quality-report.json\n")),(0,l.kt)("h3",{id:"checkstyle"},"Checkstyle"),(0,l.kt)("p",null,"Reports lint issues. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"--reporter=checkstyle")," to enable this format."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<checkstyle version="10.0">\n  <file name="lib/src/analyzers/lint_analyzer/lint_analyzer.dart">\n    <error line="168" column="3" severity="ignore" message="Long method. This method contains 63 lines with code." source="long-method"/>\n  </file>\n  <file name="lib/src/analyzers/lint_analyzer/rules/rules_list/avoid_returning_widgets/visit_declaration.dart">\n    <error line="3" column="1" severity="ignore" message="Long Parameter List. This function require 6 arguments." source="long-parameter-list"/>\n  </file>\n  <file name="lib/src/analyzers/lint_analyzer/reporters/utility_selector.dart">\n    <error line="27" column="3" severity="ignore" message="Long method. This method contains 53 lines with code." source="long-method"/>\n  </file>\n  <file name="lib/src/analyzers/lint_analyzer/reporters/reporters_list/html/utility_functions.dart">\n    <error line="45" column="1" severity="ignore" message="Long function. This function contains 56 lines with code." source="long-method"/>\n  </file>\n  <file name="lib/src/analyzers/lint_analyzer/reporters/reporters_list/html/lint_html_reporter.dart">\n    <error line="74" column="3" severity="ignore" message="Long method. This method contains 136 lines with code." source="long-method"/>\n    <error line="330" column="3" severity="ignore" message="Long method. This method contains 159 lines with code." source="long-method"/>\n  </file>\n</checkstyle>\n')),(0,l.kt)("p",null,"Example Bitbucket pipeline configuration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Define a pipeline in your ",(0,l.kt)("a",{parentName:"li",href:"https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/"},"bitbucket-pipelines.yml")," file that generates the Checkstyle report and ",(0,l.kt)("a",{parentName:"li",href:"https://bitbucket.org/product/features/pipelines/integrations?p=atlassian/checkstyle-report"},"process them"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"image: dart\n\npipelines:\n  default:\n    - step:\n        name: analyze\n        script:\n          - dcl analyze --reporter=checkstyle lib > checkstyle-result.xml\n        after-script:\n          - pipe: atlassian/checkstyle-report:0.3.1\n")))}d.isMDXComponent=!0}}]);