"use strict";(self.webpackChunkdart_code_linter=self.webpackChunkdart_code_linter||[]).push([[2681],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={},l="avoid-shrink-wrap-in-lists",o={unversionedId:"rules/flutter/avoid-shrink-wrap-in-lists",id:"rules/flutter/avoid-shrink-wrap-in-lists",title:"avoid-shrink-wrap-in-lists",description:"added in: 1.6.0performance",source:"@site/docs/rules/flutter/avoid-shrink-wrap-in-lists.mdx",sourceDirName:"rules/flutter",slug:"/rules/flutter/avoid-shrink-wrap-in-lists",permalink:"/docs/rules/flutter/avoid-shrink-wrap-in-lists",draft:!1,editUrl:"https://github.com/bancolombia/dart-code-linter/tree/gh-pages-source/docs/rules/flutter/avoid-shrink-wrap-in-lists.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"avoid-returning-widgets",permalink:"/docs/rules/flutter/avoid-returning-widgets"},next:{title:"avoid-unnecessary-setstate",permalink:"/docs/rules/flutter/avoid-unnecessary-setstate"}},s={},p=[{value:"Example",id:"example",level:2},{value:"Bad:",id:"bad",level:3},{value:"Good:",id:"good",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"avoid-shrink-wrap-in-lists"},"avoid-shrink-wrap-in-lists"),(0,i.kt)("p",null,"added in: 1.6.0",(0,i.kt)("span",{style:{color:"blue"}},"performance")),(0,i.kt)("p",null,"Warns when a ",(0,i.kt)("inlineCode",{parentName:"p"},"ListView")," widget with ",(0,i.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," parameter is wrapped in a ",(0,i.kt)("inlineCode",{parentName:"p"},"Column"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Row")," or another ",(0,i.kt)("inlineCode",{parentName:"p"},"ListView")," widget."),(0,i.kt)("p",null,"According to the Flutter documentation, using ",(0,i.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," in lists is expensive performance-wise and should be avoided, since using slivers is significantly cheaper and achieves the same or even better results."),(0,i.kt)("p",null,"Additional resources:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dart-lang/linter/issues/3496"},"https://github.com/dart-lang/linter/issues/3496"))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("h3",{id:"bad"},"Bad:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Column(\n  children: [\n    Expanded(\n      // LINT\n      child: ListView(\n        shrinkWrap: true,\n        physics: const NeverScrollableScrollPhysics(),\n        children: [],\n      ),\n    ),\n  ],\n),\n")),(0,i.kt)("h3",{id:"good"},"Good:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"CustomScrollView(\n  slivers: [\n    SliverList(\n      delegate: SliverChildBuilderDelegate(\n        (context, index) => Container(),\n        childCount: someObject.length,\n      ),\n    ),\n  ],\n),\n")))}u.isMDXComponent=!0}}]);