"use strict";(self.webpackChunkdart_code_linter=self.webpackChunkdart_code_linter||[]).push([[4368],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5226:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={},l="prefer-extracting-callbacks",o={unversionedId:"rules/flutter/prefer-extracting-callbacks",id:"rules/flutter/prefer-extracting-callbacks",title:"prefer-extracting-callbacks",description:"added in: 1.6.0 style",source:"@site/docs/rules/flutter/prefer-extracting-callbacks.mdx",sourceDirName:"rules/flutter",slug:"/rules/flutter/prefer-extracting-callbacks",permalink:"/es/docs/rules/flutter/prefer-extracting-callbacks",draft:!1,editUrl:"https://github.com/bancolombia/dart-code-linter/tree/gh-pages-source/docs/rules/flutter/prefer-extracting-callbacks.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"prefer-correct-edge-insets-constructor",permalink:"/es/docs/rules/flutter/prefer-correct-edge-insets-constructor"},next:{title:"prefer-single-widget-per-file",permalink:"/es/docs/rules/flutter/prefer-single-widget-per-file"}},s={},d=[],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prefer-extracting-callbacks"},"prefer-extracting-callbacks"),(0,a.kt)("p",null,"added in: 1.6.0 ",(0,a.kt)("span",{style:{color:"green"}},"style")),(0,a.kt)("p",null,"Warns about inline callbacks in a widget tree and suggests to extract them to widget methods in order to make a build method more readable. In addition extracting can help test those methods separately as well."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This rule will not trigger on:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"arrow functions like ",(0,a.kt)("inlineCode",{parentName:"li"},"onPressed: () => _handler(...)")," in order to cover cases when a callback needs a variable from the outside;"),(0,a.kt)("li",{parentName:"ul"},"empty blocks."),(0,a.kt)("li",{parentName:"ul"},"Flutter specific: arguments with functions returning ",(0,a.kt)("inlineCode",{parentName:"li"},"Widget")," type (or its subclass) and with first parameter of type ",(0,a.kt)("inlineCode",{parentName:"li"},"BuildContext"),'. "Builder" functions is a common pattern in Flutter, for example, ',(0,a.kt)("u",null,(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/widgets/IndexedWidgetBuilder.html"},"IndexedWidgetBuilder"))," typedef is used in ",(0,a.kt)("u",null,(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/widgets/ListView/ListView.builder.html"},"ListView.builder")),".:::")),(0,a.kt)("h2",{parentName:"admonition",id:"config"},"Config"),(0,a.kt)("p",{parentName:"admonition"},"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"allowed-line-count")," (default is none) to configure the maximum number of lines after which the rule should trigger."),(0,a.kt)("p",{parentName:"admonition"},"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"ignored-named-arguments")," (default is none) to ignore specific named parameters."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"dart_code_linter:\n  ...\n  rules:\n    ...\n    - prefer-extracting-callbacks:\n        ignored-named-arguments:\n          - onPressed\n        allowed-line-count: 3\n")),(0,a.kt)("h2",{parentName:"admonition",id:"example"},"Example"),(0,a.kt)("h3",{parentName:"admonition",id:"bad"},"Bad:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () { // LINT\n        // Some\n        // Huge\n        // Callback\n      },\n      child: ...\n    );\n  }\n}\n")),(0,a.kt)("h3",{parentName:"admonition",id:"good"},"Good:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () => handlePressed(context),\n      child: ...\n    );\n  }\n\n  void handlePressed(BuildContext context) {\n    ...\n  }\n}\n\nclass MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: handlePressed,\n      child: ...\n    );\n  }\n\n  void handlePressed() {\n    ...\n  }\n}\n"))))}p.isMDXComponent=!0}}]);